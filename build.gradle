buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "pl.allegro.tech.build:axion-release-plugin:1.8.1"
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

apply plugin: "pl.allegro.tech.build.axion-release"

jar {
    manifest {
        attributes(
                'Main-Class': "com.core.cowin.CoWinApp"
        )
    }
}

scmVersion {
    localOnly = true
    versionIncrementer "incrementMinor"
}

allprojects {
    group "com.practice"
    version = scmVersion.version

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
}

dependencies {
    implementation project(":core-java")
    implementation project(":util")
}

subprojects {
    apply plugin: "java"
    apply plugin: "com.github.johnrengelman.shadow"

    configurations {
        developmentOnly
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        implementation "org.projectlombok:lombok:$lombokVersion"

        implementation "ch.qos.logback:logback-classic:$logbackVersion"
        implementation "net.logstash.logback:logstash-logback-encoder:$logstashVersion"

        // Commons IO
        implementation "commons-io:commons-io:$commonsIOVersion"

        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testImplementation "org.projectlombok:lombok:$lombokVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test.classpath += configurations.developmentOnly

    test {
        useJUnitPlatform()
    }

    shadowJar {
        mergeServiceFiles()
    }

}